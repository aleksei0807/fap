{% func HomeHandler(packageName string) %}{% if packageName == "main" %}package main{% else %}package {%s packageName %}{% endif %}

import (
	"fmt"
	"github.com/valyala/fasthttp"
	r "gopkg.in/dancannon/gorethink.v2"
)

var (
	homeGreetsTpl = []byte("Hi, ")
	homeGreetsNameParam = "name"
	homeGreetsDefaultName = []byte("Guest")
	homeCounterTpl = []byte("This page was viewed: ")
	homeCounterEnd = []byte(" times")
)

func homeHandler(ctx *fasthttp.RequestCtx) {
	ctx.Write(homeGreetsTpl)
	if name := ctx.UserValue(homeGreetsNameParam); name != nil && len(name.(string)) > 0 {
		ctx.WriteString(name.(string))
	} else {
		ctx.Write(homeGreetsDefaultName)
	}
	filter := map[string]interface{}{
	    "uri": string(ctx.URI().Path()),
	}
	var (
		tmp []interface{}
		count = float64(0)
	)
 	f, _ := r.Table("stats").Filter(filter).Run(rdb)
	f.All(&tmp)
	f.Close()
	if len(tmp) > 0 {
		r.Table("stats").Filter(filter).Update(map[string]interface{}{
			"views": r.Row.Field("views").Add(1).Default(0),
		}).RunWrite(rdb)
		v, _ := r.Table("stats").Filter(filter).Run(rdb)
		c := map[string]interface{}{}
		v.Peek(&c)
		count = c["views"].(float64)
		v.Close()
	} else {
		filter["views"] = 1
		r.Table("stats").Insert(filter).RunWrite(rdb)
		count = 1
	}
	fmt.Fprintln(ctx)
	ctx.Write(homeCounterTpl)
	fmt.Fprint(ctx, count)
	ctx.Write(homeCounterEnd)
}
{% endfunc %}
