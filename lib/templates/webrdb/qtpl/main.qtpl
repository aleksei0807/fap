{% func FastHTTPRouter(packageName string) %}{% if packageName == "main" %}package main{% else %}package {%s packageName %}{% endif %}

import ({% if packageName == "main" %}
	"flag"

{% endif %}	"github.com/kirillDanshin/dlog"
	"github.com/kirillDanshin/fap/web"
	"github.com/kirillDanshin/myutils"

	r "gopkg.in/dancannon/gorethink.v2"
)
var ({% if packageName == "main" %}
	address = flag.String("address", "127.0.0.1:3270", "address to bind")
	rdbAddr = flag.String("rdbAddr", "127.0.0.1:28015", "rethinkdb address for connection")
	rDBName	= flag.String("rDB", "fap", "rethinkdb database name")
{% endif %}
	rdb *r.Session
)
{% if packageName == "main" %}func main() {
	flag.Parse()
	addr := *address
	rdbAddress := *rdbAddr
	rDB := *rDBName
{% else %}func Run(addr, rdbAddress, rDB string) {{% endif %}
	var err error

	dlog.F("Connecting to RethinkDB")
	rdb, err = r.Connect(r.ConnectOpts{
	    Address: rdbAddress,
		Database: rDB,
	})
	myutils.LogFatalError(err)

	r.DBCreate(rDB).Run(rdb)

	tl := []string{}
	req, err := r.TableList().Run(rdb)
	r.TableCreate("stats").Run(rdb)
	myutils.LogFatalError(err)

	dlog.D(req.All(&tl))
	dlog.D(tl)

	w := web.New(addr)

	dlog.F("Registering handlers")

	w.RegisterChain(getRouteChain())

	dlog.F("Listening on %s", addr)
	myutils.LogFatalError(w.ListenAndServeGZip())
}
{% endfunc %}
